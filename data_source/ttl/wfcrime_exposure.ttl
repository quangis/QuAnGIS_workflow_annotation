# @Author(s): Eric Top, Haiqi Xu, Simon Scheider, 
@prefix ccd: <http://geographicknowledge.de/vocab/CoreConceptData.rdf#> .
@prefix cct: <https://github.com/quangis/cct#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix tools: <https://quangis.github.io/tool/arcgis#> .
@prefix wf: <http://geographicknowledge.de/vocab/Workflow.rdf#> .

[] wf:applicationOf [ a wf:Workflow ;
            rdfs:label "wfcrime_exposure" ;
            wf:edge _:n0,
                _:n10,
                _:n12,
                _:n13,
                _:n14,
                _:n16,
                _:n19,
                _:n28,
                _:n29,
                [ wf:applicationOf [ a wf:Workflow ;
                            rdfs:label "JoinCountAttribute" ;
                            wf:edge _:n0,
                                _:n7 ;
                            wf:source _:buurt,
                                _:crimes ;
                            dct:subject """1: R2(Obj, Count);
2: ObjectExtent; 
join_attr 2 1""" ] ;
                    wf:input1 _:crimes ;
                    wf:input2 _:buurt ;
                    wf:output _:buurt_crime ;
                    cct:expression """1: R2(Obj, Count);
2: ObjectExtent; 
join_attr 2 1""" ],
                [ wf:applicationOf [ a wf:Workflow ;
                            rdfs:label "ComputeCountDensityonObject" ;
                            wf:edge _:n10,
                                _:n12,
                                _:n13,
                                _:n14,
                                _:n28,
                                _:n29 ;
                            wf:source _:buurt_crime ;
                            dct:subject """ 1: ObjectInfo(Count);        
        join_attr
            (get_attrL 1)
            (apply2 ratio (get_attrR 1)  (apply1
                (compose size deify)
                (get_attrL 1)
            ))""" ] ;
                    wf:inputx _:buurt_crime ;
                    wf:output _:buurt_crime_density ;
                    cct:expression """ 1: ObjectInfo(Count);        
        join_attr
            (get_attrL 1)
            (apply2 ratio (get_attrR 1)  (apply1
                (compose size deify)
                (get_attrL 1)
            ))""" ],
                [ wf:applicationOf [ a wf:Workflow ;
                            rdfs:label "InterpolateDensityonObjects2LineObject" ;
                            wf:edge _:n16,
                                _:n19 ;
                            wf:source _:buurt_crime_density,
                                _:routes ;
                            dct:subject """1: ObjectInfo(Ratio);
    2: ObjectInfo(Nom);
    join_attr
    (get_attrL 2)
    (join (get_attrL 2)
    (arealinterpol
    (getamounts 1)
    (pi2 (get_attrL 2))))""" ] ;
                    wf:input1 _:buurt_crime_density ;
                    wf:input2 _:routes ;
                    wf:output _:buurt_crime_density_avg ;
                    cct:expression """1: ObjectInfo(Ratio);
    2: ObjectInfo(Nom);
    join_attr
    (get_attrL 2)
    (join (get_attrL 2)
    (arealinterpol
    (getamounts 1)
    (pi2 (get_attrL 2))))""" ],
                _:n62,
                _:n68,
                _:n7,
                _:n70,
                _:n72,
                _:n73,
                _:n76,
                [ wf:applicationOf [ a wf:Workflow ;
                            rdfs:label "CreateAndBuildNetwork" ;
                            wf:edge _:n62,
                                _:n68 ;
                            wf:source _:roads ;
                            dct:subject "nbuild (1: ObjectInfo(Ratio))" ] ;
                    wf:inputx _:roads ;
                    wf:output _:network ;
                    cct:expression "nbuild (1: ObjectInfo(Ratio))" ],
                [ wf:applicationOf [ a wf:Workflow ;
                            rdfs:label "RouteAnalysis" ;
                            wf:edge _:n70,
                                _:n72,
                                _:n73,
                                _:n76 ;
                            wf:source _:home,
                                _:network,
                                _:work_sport_store_locations ;
                            dct:subject """1: Network(Ratio);
2: ObjectInfo(Nom);
3: ObjectInfo(Nom);        
           generateobjectsfromrel (nRoutes (get_attrL 2) (get_attrL 3) 1)""" ] ;
                    wf:input1 _:network ;
                    wf:input2 _:home ;
                    wf:input3 _:work_sport_store_locations ;
                    wf:output _:routes ;
                    cct:expression """1: Network(Ratio);
2: ObjectInfo(Nom);
3: ObjectInfo(Nom);        
           generateobjectsfromrel (nRoutes (get_attrL 2) (get_attrL 3) 1)""" ] ;
            wf:source _:buurt,
                _:crimes,
                _:home,
                _:roads,
                _:work_sport_store_locations ;
            rdfs:comment "What is the crime density along the shortest path from my home to my workplace in Amsterdam?" ] ;
    wf:inputx _:buurt,
        _:crimes,
        _:home,
        _:roads,
        _:work_sport_store_locations ;
    wf:output _:buurt_crime_density_avg ;
    rdfs:comment "What is the crime density along the shortest path from my home to my workplace in Amsterdam?" .

_:buurt_crime_addfield a ccd:ObjectQ,
        ccd:VectorTessellationA .

_:buurt_crime_count a ccd:CountA,
        ccd:ObjectQ,
        ccd:VectorTessellationA .

_:buurt_crime_count_addfield a ccd:ObjectQ,
        ccd:VectorTessellationA .

_:buurt_crime_density2 a ccd:IRA,
        ccd:LineA,
        ccd:ObjectQ .

_:buurt_crime_geom a ccd:ObjectQ,
        ccd:VectorTessellationA .

_:buurt_crime_geom_addfield a ccd:ObjectQ,
        ccd:VectorTessellationA .

_:buurt_crime_join a ccd:ObjectQ,
        ccd:VectorTessellationA .

_:n0 wf:applicationOf tools:JoinField ;
    wf:input1 _:crimes ;
    wf:input2 _:buurt ;
    wf:output _:buurt_crime_join ;
    rdfs:comment "Join crime data to vector polygons representing buurten of Amsterdam " .

_:n10 wf:applicationOf tools:AddField ;
    wf:inputx _:buurt_crime ;
    wf:output _:buurt_crime_addfield ;
    rdfs:comment "Add a field for area sizes" .

_:n12 wf:applicationOf tools:CalculateGeometryAttributes ;
    wf:inputx _:buurt_crime_addfield ;
    wf:output _:buurt_crime_geom ;
    rdfs:comment "Calculate area sizes for the Amsterdam neighborhoods" .

_:n13 wf:applicationOf tools:AddField ;
    wf:inputx _:buurt_crime_geom ;
    wf:output _:buurt_crime_geom_addfield ;
    rdfs:comment "Add a field for copying the crime counts in Amsterdam neighborhoods" .

_:n14 wf:applicationOf tools:CalculateField ;
    wf:inputx _:buurt_crime_geom_addfield ;
    wf:output _:buurt_crime_count ;
    rdfs:comment "Copy the crime counts in Amsterdam neighborhoods to new field" .

_:n16 wf:applicationOf tools:Intersect ;
    wf:input1 _:buurt_crime_density ;
    wf:input2 _:routes ;
    wf:output _:buurt_crime_density2 ;
    rdfs:comment "Intersect neighborhoods with crime density values with routes in Amsterdam" .

_:n19 wf:applicationOf tools:SummaryStatistics ;
    wf:inputx _:buurt_crime_density2 ;
    wf:output _:buurt_crime_density_avg ;
    rdfs:comment "Get the average crime density along the route" .

_:n28 wf:applicationOf tools:AddField ;
    wf:inputx _:buurt_crime_count ;
    wf:output _:buurt_crime_count_addfield ;
    rdfs:comment "Add a field for crime density" .

_:n29 wf:applicationOf tools:CalculateField ;
    wf:inputx _:buurt_crime_count_addfield ;
    wf:output _:buurt_crime_density ;
    rdfs:comment "Calculate crime density" .

_:n62 wf:applicationOf tools:CreateNetworkDataset ;
    wf:inputx _:roads ;
    wf:output _:network_dataset ;
    rdfs:comment "Create a network dataset layer" .

_:n68 wf:applicationOf tools:BuildNetwork ;
    wf:inputx _:network_dataset ;
    wf:output _:network ;
    rdfs:comment "Build a representation of the Amsterdam road network" .

_:n7 wf:applicationOf tools:CopyFeatures ;
    wf:inputx _:buurt_crime_join ;
    wf:output _:buurt_crime ;
    rdfs:comment "Copy the join to a new layer" .

_:n70 wf:applicationOf tools:MakeRouteAnalysisLayer ;
    wf:inputx _:network ;
    wf:output _:route_analysis_layer ;
    rdfs:comment "Create a route analysis layer" .

_:n72 wf:applicationOf tools:AddLocations ;
    wf:input1 _:route_analysis_layer ;
    wf:input2 _:home ;
    wf:output _:route_analysis_layer_home ;
    rdfs:comment "Add a home location to the route analysis layer" .

_:n73 wf:applicationOf tools:AddLocations ;
    wf:input1 _:route_analysis_layer_home ;
    wf:input2 _:work_sport_store_locations ;
    wf:output _:route_analysis_layer_all ;
    rdfs:comment "Add a work, a sport, and a store location to the route analysis layer" .

_:n76 wf:applicationOf tools:Solve ;
    wf:inputx _:route_analysis_layer_all ;
    wf:output _:routes ;
    rdfs:comment "Execute the route analysis" .

_:network_dataset a ccd:LineA,
        ccd:NetworkQ .

_:route_analysis_layer a ccd:LineA,
        ccd:NetworkQ .

_:route_analysis_layer_all a ccd:LineA,
        ccd:NetworkQ .

_:route_analysis_layer_home a ccd:LineA,
        ccd:NetworkQ .

_:buurt_crime_density_avg a ccd:IRA,
        ccd:LineA,
        ccd:ObjectQ .

_:buurt a ccd:ObjectQ,
        ccd:VectorTessellationA ;
    rdfs:comment "Vector polygons representing neighborhoods in Amsterdam" .

_:buurt_crime a ccd:CountA,
        ccd:ObjectQ,
        ccd:VectorTessellationA .

_:buurt_crime_density a ccd:IRA,
        ccd:ObjectQ,
        ccd:VectorTessellationA .

_:crimes a ccd:CountA,
        ccd:ObjectQ ;
    rdfs:comment "Table with counts of crime for each neighborhood in Amsterdam" .

_:home a ccd:ObjectQ,
        ccd:PointA ;
    rdfs:comment "Point location of a home address" .

_:network a ccd:LineA,
        ccd:NetworkQ,
        ccd:RatioA .

_:roads a ccd:LineA,
        ccd:ObjectQ,
        ccd:RatioA ;
    rdfs:comment "A line dataset representing roads in Amsterdam" .

_:routes a ccd:LineA,
        ccd:NominalA,
        ccd:ObjectQ ;
    rdfs:comment "A custom-generated route through Amsterdam" .

_:work_sport_store_locations a ccd:ObjectQ,
        ccd:PointA ;
    rdfs:comment "Points representing work, sport and store locations" .

